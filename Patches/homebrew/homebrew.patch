diff --git a/Library/Homebrew/blacklist.rb b/Library/Homebrew/blacklist.rb
index 26d16c4..8b0237e 100644
--- a/Library/Homebrew/blacklist.rb
+++ b/Library/Homebrew/blacklist.rb
@@ -6,11 +6,6 @@ def blacklisted? name
   when 'libarchive', 'libpcap' then <<-EOS.undent
     Apple distributes #{name} with OS X, you can find it in /usr/lib.
     EOS
-  when 'libiconv' then <<-EOS.undent
-    Apple distributes #{name} with OS X, you can find it in /usr/lib.
-    Some build scripts fail to detect it correctly, please check existing
-    formulae for solutions.
-    EOS
   when 'libxml', 'libxlst' then <<-EOS.undent
     Apple distributes #{name} with OS X, you can find it in /usr/lib.
     However not all build scripts look for these hard enough, so you may need
diff --git a/Library/Homebrew/extend/ARGV.rb b/Library/Homebrew/extend/ARGV.rb
index afb0386..5741b1f 100644
--- a/Library/Homebrew/extend/ARGV.rb
+++ b/Library/Homebrew/extend/ARGV.rb
@@ -99,7 +99,15 @@ module HomebrewArgvExtension
   def build_universal?
     include? '--universal'
   end
-
+  
+  def build_env
+    ENV['HOMEBREW_GPGTOOLS_BUILD_ENV'] || HOMEBREW_GPGTOOLS_BUILD_ENV 
+  end
+  
+  def build_ppc?
+    include? '--with-ppc'
+  end
+  
   # Request a 32-bit only build.
   # This is needed for some use-cases though we prefer to build Universal
   # when a 32-bit version is needed.
diff --git a/Library/Homebrew/extend/ENV.rb b/Library/Homebrew/extend/ENV.rb
index 4eeba6b..b25dc84 100644
--- a/Library/Homebrew/extend/ENV.rb
+++ b/Library/Homebrew/extend/ENV.rb
@@ -321,6 +321,43 @@ Please take one of the following actions:
       # Can't mix "-march" for a 32-bit CPU  with "-arch x86_64"
       replace_in_cflags(/-march=\S*/, '-Xarch_i386 \0') if Hardware.is_32_bit?
     end
+    
+    # Also build PPC but with local jail containing the compiler.
+    ARGV.build_ppc? && build_ppc
+  end
+  
+  def build_ppc
+    # Remove -mssex flag because it isn't supported by ppc cc1.
+    replace_in_cflags(/-msse\S*/, '')
+    replace_in_cflags(/-march=\S*/, '')
+    # Add the arch ppc to compile and linker flags.
+    append_to_cflags '-arch ppc'
+    append 'LDFLAGS', '-arch ppc'
+    # Use the LLVM-CC compiler from the build-env.
+    self['LD'] = self['CC'] = "#{ARGV.build_env}/usr/bin/llvm-gcc"
+    # Set the min version to 10.5
+    osx_10_5
+    append_to_cflags("-isysroot #{ARGV.build_env}/SDKs/MacOSX10.5.sdk")
+    append_to_cflags("-isystem #{ARGV.build_env}/SDKs/MacOSX10.5.sdk/include")
+    append_to_cflags("-DUNIX")
+  end
+  
+  def build_32_bit
+    %w{ CFLAGS LDFLAGS }.each do |compiler_flag|
+      remove compiler_flag, "-arch x86_64"
+      append compiler_flag, "-arch i386"
+    end
+    
+    replace_in_cflags(/-march=\S*/, '')
+  end
+  
+  def build_64_bit
+    %w{ CFLAGS LDFLAGS }.each do |compiler_flag|
+      remove compiler_flag, "-arch i386"
+      append compiler_flag, "-arch x86_64"
+    end
+    
+    replace_in_cflags(/-march=\S*/, '')
   end
 
   def prepend key, value, separator = ' '
diff --git a/Library/Homebrew/formula.rb b/Library/Homebrew/formula.rb
index c8ef58e..563ef97 100644
--- a/Library/Homebrew/formula.rb
+++ b/Library/Homebrew/formula.rb
@@ -156,6 +156,12 @@ class Formula
     self.class.keg_only_reason || false
   end
 
+  # Homebrew fixes the install names per default.
+  # Use this option to disable it.
+  def keep_install_names?
+    self.class.keep_install_names || false
+  end
+
   def fails_with_llvm?
     llvm = self.class.fails_with_llvm_reason
     if llvm
@@ -574,6 +580,7 @@ private
     attr_rw :keg_only_reason, :fails_with_llvm_reason, :skip_clean_all
     attr_rw :bottle_url, :bottle_sha1
     attr_rw(*CHECKSUM_TYPES)
+    attr_rw :keep_install_names
 
     def head val=nil, specs=nil
       return @head if val.nil?
diff --git a/Library/Homebrew/formula_installer.rb b/Library/Homebrew/formula_installer.rb
index 266f518..1c8cd59 100644
--- a/Library/Homebrew/formula_installer.rb
+++ b/Library/Homebrew/formula_installer.rb
@@ -156,7 +156,11 @@ class FormulaInstaller
       link
       check_PATH
     end
-    fix_install_names
+    unless f.keep_install_names?
+      fix_install_names
+    else
+      rpath_install_names
+    end
 
     ohai "Summary" if ARGV.verbose? or show_summary_heading
     print "#{f.prefix}: #{f.prefix.abv}"
@@ -244,6 +248,16 @@ class FormulaInstaller
     @show_summary_heading = true
   end
 
+  def rpath_install_names
+    Keg.new(f.prefix).rpath_install_names
+  rescue Exception => e
+    onoe "Failed to fix install names"
+    puts "The formula built, but you may encounter issues using it or linking other"
+    puts "formula against it."
+    ohai e, e.backtrace if ARGV.debug?
+    @show_summary_heading = true
+  end
+
   def clean
     require 'cleaner'
     Cleaner.new f
diff --git a/Library/Homebrew/global.rb b/Library/Homebrew/global.rb
index b29ab0f..0eebd65 100644
--- a/Library/Homebrew/global.rb
+++ b/Library/Homebrew/global.rb
@@ -59,6 +59,9 @@ else
   HOMEBREW_REPOSITORY+"Cellar"
 end
 
+# GPGTools Homebrew build environment.
+HOMEBREW_GPGTOOLS_BUILD_ENV = "/"
+
 HOMEBREW_LOGS = Pathname.new('~/Library/Logs/Homebrew/').expand_path
 
 if RUBY_PLATFORM =~ /darwin/
diff --git a/Library/Homebrew/keg.rb b/Library/Homebrew/keg.rb
index e0eba14..3b1fc26 100644
--- a/Library/Homebrew/keg.rb
+++ b/Library/Homebrew/keg.rb
@@ -29,7 +29,7 @@ class Keg < Pathname
 
   def unlink
     n=0
-    %w[bin etc lib include sbin share var].map{ |d| self/d }.each do |src|
+    %w[bin etc lib libexec include sbin share var].map{ |d| self/d }.each do |src|
       src.find do |src|
         next if src == self
         dst=HOMEBREW_PREFIX+src.relative_path_from(self)
diff --git a/Library/Homebrew/keg_fix_install_names.rb b/Library/Homebrew/keg_fix_install_names.rb
index e0b9259..cdf5b7e 100644
--- a/Library/Homebrew/keg_fix_install_names.rb
+++ b/Library/Homebrew/keg_fix_install_names.rb
@@ -20,6 +20,33 @@ class Keg
     end
   end
 
+  def rpath_install_names
+    ohai "Fixing libs to use @rpath"
+    dylibs.each do |dylib|
+      dylib.ensure_writable do
+        dylib_name = dylib.to_s
+        dylib_basename = Pathname.new(dylib).relative_path_from(join 'lib')
+        # Change the absolute path to @rpath/dylib using install_name_tool -id.
+        system "install_name_tool", "-id", "@rpath/#{dylib_basename}", "#{dylib_name}"
+      end
+    end
+    
+    ohai "Adding @rpath to binaries"
+    lib = join 'lib'
+    binaries.each do |binary|
+      absolute_install_names_for binary do |id, absolute_names|
+        binary.ensure_writable do
+          system "install_name_tool", "-add_rpath", "@loader_path/../lib", "#{binary}"
+          system "install_name_tool", "-add_rpath", "#{lib}", "#{binary}"
+          absolute_names.each do |absolute_name|
+            dylib_basename = Pathname.new(absolute_name).relative_path_from(lib)
+            system "install_name_tool", "-change", "#{absolute_name}", "@rpath/#{dylib_basename}", "#{binary}"
+          end
+        end
+      end
+    end
+  end
+
   private
 
   OTOOL_RX = /\t(.*) \(compatibility version (\d+\.)*\d+, current version (\d+\.)*\d+\)/
@@ -44,6 +71,25 @@ class Keg
     yield id, install_names
   end
 
+  def absolute_install_names_for binary
+    binary = binary.to_s
+
+    ENV['HOMEBREW_BINARY'] = binary # solves all shell escaping problems
+    install_names = `otool -L "$HOMEBREW_BINARY"`.split "\n"
+    
+    install_names.shift # first line is fluff
+    install_names.map!{ |s| OTOOL_RX =~ s && $1 }
+    install_names.compact!
+    # Only include those dylibs which are point into HOMEBREW_PREFIX
+    install_names.reject!{ |fn| !(fn =~ /^#{HOMEBREW_PREFIX}/) }
+    
+    # the shortpath ensures that library upgrades donâ€™t break installed tools
+    shortpath = HOMEBREW_PREFIX + Pathname.new(binary).relative_path_from(self)
+    id = if shortpath.exist? then shortpath else binary end
+    
+    yield id, install_names
+  end
+  
   def dylibs
     if (lib = join 'lib').directory?
       lib.children.select{ |pn| pn.extname == '.dylib' and not pn.symlink? }
@@ -51,4 +97,12 @@ class Keg
       []
     end
   end
+  
+  def binaries
+    if(bin = join 'bin').directory?
+      bin.children.select { |pn| not pn.symlink? }
+    else
+      []
+    end
+  end
 end
diff --git a/Library/Homebrew/utils.rb b/Library/Homebrew/utils.rb
index 9b19801..9317497 100644
--- a/Library/Homebrew/utils.rb
+++ b/Library/Homebrew/utils.rb
@@ -112,7 +112,7 @@ def curl *args
   # See https://github.com/mxcl/homebrew/issues/6103
   args << "--insecure" if MacOS.version < 10.6
   args << "--verbose" if ENV['HOMEBREW_CURL_VERBOSE']
-  args << "--silent" unless $stdout.tty?
+  args << "--silent" unless $stdout.tty? || ARGV.quieter?
 
   safe_system curl, *args
 end
