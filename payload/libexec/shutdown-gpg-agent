#!/bin/bash

PROGRAM_NAME="gpg-agent"
LOGFILE="$HOME/Library/Logs/shutdown-gpg-agent.log"
AGENT_SOCKET_DEFAULT="$HOME/.gnupg/S.gpg-agent"
AGENT_SOCKET_ALT="/tmp/gpg-agent/$USER/S.gpg-agent"

function log {
    current_date=$(date "+%Y-%m-%d %H:%M:%S")
    echo "$current_date: $1"
    if [[ "$2" != "" ]]; then
        echo ""
    fi
}

function agentPID {
    echo $(ps axc | awk "{if (\$5==\"$PROGRAM_NAME\") print \$1}");
}

function onExit {
    log "* Logout in progress..."
    pid="$(agentPID)"

    if [[ "$pid" == "" ]]; then
        log "* gpg-agent not running, no reason to kill it." 1
        return
    fi

    log "  - killing gpg-agent..."
    kill -9 $pid

    RET=$?

    # Now remove the S.gpg-agent file
    if [ -S "$AGENT_SOCKET_DEFAULT" ]; then
        log "Removing S.gpg-agent sockets at $AGENT_SOCKET_DEFAULT" 1
        rm -f "$AGENT_SOCKET_DEFAULT"
        rm -f "${AGENT_SOCKET_DEFAULT}.ssh"
    fi

    if [ -S "$AGENT_SOCKET_ALT" ]; then
        log "Removing S.gpg-agent sockets at $AGENT_SOCKET_ALT" 1
        rm -f "$AGENT_SOCKET_ALT"
        rm -f "${AGENT_SOCKET_ALT}.ssh"
    fi

    if [[ "$RET" != "0" ]]; then
        log "* Failed to kill gpg-agent. Sorry..." 1
    else
        log "* Successfully killed gpg-agent. job well done" 1
    fi

    exit 0
}

# Setting up the logfile.
exec >> $LOGFILE 2>&1

log "* Setting up kill event listeners"

# Setup the signals to trap which will invoke the onExit handler.
trap onExit SIGHUP SIGINT SIGTERM

log "  - successfully setup kill event listeners"
log "  - waiting for logout..."
# Sleep for approx. a year. Every user should shutdown their computer at
# least once a year.
sleep 31536000 &
wait $!
