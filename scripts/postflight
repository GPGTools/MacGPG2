#!/bin/bash
# The post install MacGPG2 script.

PATH=/sbin:/bin:/usr/sbin:/usr/bin

# Remove previous bad behaviour:

# Ascertain whether using obsolete login/out scripts and remove
defaults read com.apple.loginwindow LoginHook 2>&1  | grep --quiet /usr/local/sbin/gpg-login.sh  && defaults delete com.apple.loginwindow LoginHook
defaults read com.apple.loginwindow LogoutHook 2>&1 | grep --quiet /usr/local/sbin/gpg-logout.sh && defaults delete com.apple.loginwindow LogoutHook

# Now remove any mention of gpg from environment.plist.

# Recurse through all user directories:
for i in `dscl . -list /Users NFSHomeDirectory | awk '{ print $2 }'`; do
  if [ -f "$i/.MacOSX/environment.plist" ]
    then
    defaults delete "$i/.MacOSX/environment" GPG_AGENT_INFO >& /dev/null
    # If ssh support enabled, remove associated entries
    grep --quiet "^enable-ssh-support" "$i/.gnupg/gpg-agent.conf"
    if [ $? -eq 0 ]
      then
      defaults delete "$i/.MacOSX/environment" SSH_AGENT_PID >& /dev/null
      defaults delete "$i/.MacOSX/environment" SSH_AUTH_SOCK >& /dev/null
    fi
  fi
done 

# If gpg not installed, create a symbolic link:

which -s gpg || [ -f /usr/local/bin/gpg ] || ln -s /usr/local/bin/gpg2 /usr/local/bin/gpg

# Now add the gpg-agent helper AppleScript to login items for the current user:
osascript -e 'tell application "System Events" to make new login item at end with properties {path:"/Applications/start-gpg-agent.app", hidden:true}' > /dev/null

# Kill any running copies of gpg-agent:

killall gpg-agent

# Rely upon start-gpg-agent to restart gpg-agent

exit 0

