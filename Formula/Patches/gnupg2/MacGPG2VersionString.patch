--- a/agent/gpg-agent.c
+++ b/agent/gpg-agent.c
@@ -355,7 +355,7 @@
 
   switch (level)
     {
-    case 11: p = "gpg-agent (GnuPG)";
+    case 11: p = "gpg-agent (GnuPG/MacGPG2)";
       break;
     case 13: p = VERSION; break;
     case 17: p = PRINTABLE_OS_NAME; break;
--- a/agent/preset-passphrase.c
+++ b/agent/preset-passphrase.c
@@ -90,7 +90,7 @@
   const char *p;
   switch (level)
     {
-    case 11: p = "gpg-preset-passphrase (GnuPG)";
+    case 11: p = "gpg-preset-passphrase (GnuPG/MacGPG2)";
       break;
     case 13: p = VERSION; break;
     case 17: p = PRINTABLE_OS_NAME; break;
--- a/agent/protect-tool.c
+++ b/agent/protect-tool.c
@@ -156,7 +156,7 @@
   const char *p;
   switch (level)
     {
-    case 11: p = "gpg-protect-tool (GnuPG)";
+    case 11: p = "gpg-protect-tool (GnuPG/MacGPG2)";
       break;
     case 13: p = VERSION; break;
     case 17: p = PRINTABLE_OS_NAME; break;
--- a/doc/gpg.texi
+++ b/doc/gpg.texi
@@ -65,7 +65,7 @@
 @c Begin GnuPG 2 specific stuff
 
 @mansect description
-@command{@gpgname} is the OpenPGP part of the GNU Privacy Guard (GnuPG). It
+@command{@gpgname} is the OpenPGP part of the GNU Privacy Guard (GnuPG/MacGPG2). It
 is a tool to provide digital encryption and signing services using the
 OpenPGP standard. @command{@gpgname} features complete key management and
 all bells and whistles you can expect from a decent OpenPGP
@@ -677,7 +677,7 @@
   Create a photographic user ID. This will prompt for a JPEG file that
   will be embedded into the user ID. Note that a very large JPEG will make
   for a very large key. Also note that some programs will display your
-  JPEG unchanged (GnuPG), and some programs will scale it to fit in a
+  JPEG unchanged (GnuPG/MacGPG2), and some programs will scale it to fit in a
   dialog box (PGP).
 
   @item showphoto
new file mode 100644
Binary files /dev/null and b/g10/.DS_Store differ
--- a/g10/armor.c
+++ b/g10/armor.c
@@ -1078,7 +1078,7 @@
 	    iobuf_writestr(a,afx->eol);
 	    if (opt.emit_version)
 	      {
-		iobuf_writestr (a, "Version: GnuPG v");
+		iobuf_writestr (a, "Version: GnuPG/MacGPG2 v");
                 for (s=VERSION; *s && *s != '.'; s++)
                   iobuf_writebyte (a, *s);
                 if (opt.emit_version > 1 && *s)
--- a/g10/gpg.c
+++ b/g10/gpg.c
@@ -813,7 +813,7 @@
   const char *p;
 
     switch( level ) {
-      case 11: p = "gpg (GnuPG)";
+      case 11: p = "gpg (GnuPG/MacGPG2)";
 	break;
       case 13: p = VERSION; break;
       case 17: p = PRINTABLE_OS_NAME; break;
--- a/g10/gpgv.c
+++ b/g10/gpgv.c
@@ -107,7 +107,7 @@
 
   switch (level)
     {
-    case 11: p = "gpgv (GnuPG)";
+    case 11: p = "gpgv (GnuPG/MacGPG2)";
       break;
     case 13: p = VERSION; break;
     case 17: p = PRINTABLE_OS_NAME; break;
--- a/kbx/kbxutil.c
+++ b/kbx/kbxutil.c
@@ -106,7 +106,7 @@
 {
     const char *p;
     switch( level ) {
-      case 11: p = "kbxutil (GnuPG)";
+      case 11: p = "kbxutil (GnuPG/MacGPG2)";
 	break;
       case 13: p = VERSION; break;
       case 17: p = PRINTABLE_OS_NAME; break;
--- a/keyserver/gpg2keys_mailto.in
+++ b/keyserver/gpg2keys_mailto.in
@@ -25,7 +25,7 @@
 
 sub VERSION_MESSAGE ()
 {
-    print STDOUT "gpg2keys_mailto (GnuPG) @VERSION@\n";
+    print STDOUT "gpg2keys_mailto (GnuPG/MacGPG2) @VERSION@\n";
 }
 
 sub HELP_MESSAGE ()
--- a/keyserver/gpg2keys_test.in
+++ b/keyserver/gpg2keys_test.in
@@ -24,7 +24,7 @@
 
 sub VERSION_MESSAGE ()
 {
-    print STDOUT "gpg2keys_test (GnuPG) @VERSION@\n";
+    print STDOUT "gpg2keys_test (GnuPG/MacGPG2) @VERSION@\n";
 }
 
 sub HELP_MESSAGE ()
--- a/keyserver/gpgkeys_curl.c
+++ b/keyserver/gpgkeys_curl.c
@@ -124,7 +124,7 @@
   /* Kludge to implement standard GNU options.  */
   if (argc > 1 && !strcmp (argv[1], "--version"))
     {
-      printf ("gpgkeys_curl (GnuPG) %s\n", VERSION);
+      printf ("gpgkeys_curl (GnuPG/MacGPG2) %s\n", VERSION);
       printf ("Uses: %s\n", curl_version());
       return 0;
     }
--- a/keyserver/gpgkeys_finger.c
+++ b/keyserver/gpgkeys_finger.c
@@ -340,7 +340,7 @@
   /* Kludge to implement standard GNU options.  */
   if (argc > 1 && !strcmp (argv[1], "--version"))
     {
-      fputs ("gpgkeys_finger (GnuPG) " VERSION"\n", stdout);
+      fputs ("gpgkeys_finger (GnuPG/MacGPG2) " VERSION"\n", stdout);
       return 0;
     }
   else if (argc > 1 && !strcmp (argv[1], "--help"))
--- a/keyserver/gpgkeys_hkp.c
+++ b/keyserver/gpgkeys_hkp.c
@@ -717,7 +717,7 @@
   /* Kludge to implement standard GNU options.  */
   if (argc > 1 && !strcmp (argv[1], "--version"))
     {
-      printf ("gpgkeys_hkp (GnuPG) %s\n", VERSION);
+      printf ("gpgkeys_hkp (GnuPG/MacGPG2) %s\n", VERSION);
       printf ("Uses: %s\n", curl_version());
       return 0;
     }
--- a/keyserver/gpgkeys_kdns.c
+++ b/keyserver/gpgkeys_kdns.c
@@ -188,7 +188,7 @@
 static void 
 show_help (FILE *fp)
 {
-  fputs (PGM" (GnuPG) " VERSION"\n\n", fp);
+  fputs (PGM" (GnuPG/MacGPG2) " VERSION"\n\n", fp);
   fputs (" -h\thelp\n"
          " -V\tversion\n"
          " -o\toutput to this file\n"
@@ -233,7 +233,7 @@
   /* Kludge to implement standard GNU options.  */
   if (argc > 1 && !strcmp (argv[1], "--version"))
     {
-      fputs (PGM" (GnuPG) " VERSION"\n", stdout);
+      fputs (PGM" (GnuPG/MacGPG2) " VERSION"\n", stdout);
       return 0;
     }
   else if (argc > 1 && !strcmp (argv[1], "--help"))
--- a/keyserver/gpgkeys_ldap.c
+++ b/keyserver/gpgkeys_ldap.c
@@ -1809,7 +1809,7 @@
   /* Kludge to implement standard GNU options.  */
   if (argc > 1 && !strcmp (argv[1], "--version"))
     {
-      fputs ("gpgkeys_ldap (GnuPG) " VERSION"\n", stdout);
+      fputs ("gpgkeys_ldap (GnuPG/MacGPG2) " VERSION"\n", stdout);
       return 0;
     }
   else if (argc > 1 && !strcmp (argv[1], "--help"))
--- a/scd/pcsc-wrapper.c
+++ b/scd/pcsc-wrapper.c
@@ -53,7 +53,7 @@
 
 /* Allow for a standalone build. */
 #ifdef VERSION
-#define MYVERSION_LINE PGM " (GnuPG) " VERSION
+#define MYVERSION_LINE PGM " (GnuPG/MacGPG2) " VERSION
 #define BUGREPORT_LINE "\nReport bugs to <bug-gnupg@gnu.org>.\n"
 #else
 #define MYVERSION_LINE PGM
--- a/scd/scdaemon.c
+++ b/scd/scdaemon.c
@@ -247,7 +247,7 @@
 
   switch (level)
     {
-    case 11: p = "scdaemon (GnuPG)";
+    case 11: p = "scdaemon (GnuPG/MacGPG2)";
       break;
     case 13: p = VERSION; break;
     case 17: p = PRINTABLE_OS_NAME; break;
--- a/sm/gpgsm.c
+++ b/sm/gpgsm.c
@@ -512,7 +512,7 @@
 
   switch (level)
     {
-    case 11: p = "gpgsm (GnuPG)";
+    case 11: p = "gpgsm (GnuPG/MacGPG2)";
       break;
     case 13: p = VERSION; break;
     case 17: p = PRINTABLE_OS_NAME; break;
--- a/tools/ccidmon.c
+++ b/tools/ccidmon.c
@@ -810,7 +810,7 @@
         }
       else if (!strcmp (*argv, "--version"))
         {
-          fputs (PGM " (GnuPG) " PACKAGE_VERSION "\n", stdout);
+          fputs (PGM " (GnuPG/MacGPG2) " PACKAGE_VERSION "\n", stdout);
           exit (0);
         }
       else if (!strcmp (*argv, "--help"))
--- a/tools/gpg-check-pattern.c
+++ b/tools/gpg-check-pattern.c
@@ -134,7 +134,7 @@
   const char *p;
   switch (level)
     {
-    case 11: p = "gpg-check-pattern (GnuPG)";
+    case 11: p = "gpg-check-pattern (GnuPG/MacGPG2)";
       break;
     case 13: p = VERSION; break;
     case 17: p = PRINTABLE_OS_NAME; break;
--- a/tools/gpg-connect-agent.c
+++ b/tools/gpg-connect-agent.c
@@ -174,7 +174,7 @@
 
   switch (level)
     {
-    case 11: p = "gpg-connect-agent (GnuPG)";
+    case 11: p = "gpg-connect-agent (GnuPG/MacGPG2)";
       break;
     case 13: p = VERSION; break;
     case 17: p = PRINTABLE_OS_NAME; break;
--- a/tools/gpg-zip.in
+++ b/tools/gpg-zip.in
@@ -90,7 +90,7 @@
       shift
       ;;
     --version)
-      echo "gpg-zip (GnuPG) $VERSION"
+      echo "gpg-zip (GnuPG/MacGPG2) $VERSION"
       exit 0
       ;;
     --gpg)
--- a/tools/gpgconf.c
+++ b/tools/gpgconf.c
@@ -95,7 +95,7 @@
 
   switch (level)
     {
-    case 11: p = "gpgconf (GnuPG)";
+    case 11: p = "gpgconf (GnuPG/MacGPG2)";
       break;
     case 13: p = VERSION; break;
     case 17: p = PRINTABLE_OS_NAME; break;
--- a/tools/gpgsplit.c
+++ b/tools/gpgsplit.c
@@ -81,7 +81,7 @@
   const char *p;
   switch (level)
     {
-    case 11: p = "gpgsplit (GnuPG)";
+    case 11: p = "gpgsplit (GnuPG/MacGPG2)";
       break;
     case 13: p = VERSION; break;
     case 17: p = PRINTABLE_OS_NAME; break;
--- a/tools/gpgtar.c
+++ b/tools/gpgtar.c
@@ -117,7 +117,7 @@
 
   switch (level)
     {
-    case 11: p = "gpgtar (GnuPG)";
+    case 11: p = "gpgtar (GnuPG/MacGPG2)";
       break;
     case 13: p = VERSION; break;
     case 17: p = PRINTABLE_OS_NAME; break;
--- a/tools/make-dns-cert.c
+++ b/tools/make-dns-cert.c
@@ -188,7 +188,7 @@
   else if(argc>1 && strcmp(argv[1],"--version")==0)
     {
 #if defined(HAVE_CONFIG_H) && defined(VERSION)
-      printf ("make-dns-cert (GnuPG) " VERSION "\n");
+      printf ("make-dns-cert (GnuPG/MacGPG2) " VERSION "\n");
 #else
       printf ("make-dns-cert gnupg-svn%d\n", atoi (10+"$Revision$"));
 #endif
--- a/tools/symcryptrun.c
+++ b/tools/symcryptrun.c
@@ -199,7 +199,7 @@
 
   switch (level)
     {
-    case 11: p = "symcryptrun (GnuPG)";
+    case 11: p = "symcryptrun (GnuPG/MacGPG2)";
       break;
     case 13: p = VERSION; break;
     case 17: p = PRINTABLE_OS_NAME; break;
--- a/tools/watchgnupg.c
+++ b/tools/watchgnupg.c
@@ -37,7 +37,7 @@
 
 /* Allow for a standalone build on most systems. */
 #ifdef VERSION
-#define MYVERSION_LINE PGM " (GnuPG) " VERSION
+#define MYVERSION_LINE PGM " (GnuPG/MacGPG2) " VERSION
 #define BUGREPORT_LINE "\nReport bugs to <bug-gnupg@gnu.org>.\n"
 #else
 #define MYVERSION_LINE PGM
