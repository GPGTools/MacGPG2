--- gnutls-3.2.11/lib/nettle/rnd.c.orig	2014-08-26 02:08:42.243632503 +0200
+++ gnutls-3.2.11/lib/nettle/rnd.c	2014-08-26 02:08:41.123615625 +0200
@@ -216,7 +216,7 @@
 #include <sys/time.h>
 #include <fcntl.h>
 #include <locks.h>
-#include "egd.h"
+//#include "egd.h"
 
 #define DEVICE_READ_SIZE 16
 #define DEVICE_READ_SIZE_MAX 32
@@ -286,6 +286,7 @@
 	return 0;
 }
 
+#if 0
 static int do_device_source_egd(int init, struct event_st *event)
 {
 	unsigned int read_size = DEVICE_READ_SIZE;
@@ -342,6 +343,7 @@
 	}
 	return 0;
 }
+#endif
 
 static int do_device_source(int init, struct event_st *event)
 {
@@ -357,10 +359,12 @@
 
 		do_source = do_device_source_urandom;
 		ret = do_source(init, event);
+#if 0
 		if (ret < 0) {
 			do_source = do_device_source_egd;
 			ret = do_source(init, event);
 		}
+#endif
 
 		if (ret < 0) {
 			gnutls_assert();
@@ -450,7 +454,6 @@
 		if (level == GNUTLS_RND_NONCE)
 			_rnd_get_event(&event);
 	}
-#endif
 
 	/* update state only when having a non-nonce or if nonce
 	 * and nsecs%4096 == 0, i.e., one out of 4096 times called .
@@ -494,6 +497,7 @@
 	RND_UNLOCK;
 	return;
 }
+#endif
 
 int crypto_rnd_prio = INT_MAX;
 
